<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width">
  <title></title>

  <!-- <link rel="manifest" href="manifest.json"> -->

  <!-- un-comment this code to enable service worker
    <script>
      if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('service-worker.js')
          .then(() => console.log('service worker installed'))
          .catch(err => console.log('Error', err));
      }
    </script>-->

  <!-- <link href="lib/ionic/css/ionic.css" rel="stylesheet">
    <link href="css/style.css" rel="stylesheet"> -->
  <link rel="stylesheet" href="css/jquery.mobile-1.4.5.min.css" />
  <link rel="stylesheet" href="css/custom.css" />

  <!-- IF using Sass (run gulp sass first), then uncomment below and remove the CSS includes above
    <link href="css/ionic.app.css" rel="stylesheet">
    -->

  <!-- ionic/angularjs js -->
  <!-- <script src="lib/ionic/js/ionic.bundle.js"></script> -->

  <!-- cordova script (this will be a 404 during development) -->
  <script src="cordova.js"></script>

  <!-- your app's js -->
  <script src="js/app.js"></script>
  <script type="text/javascript" src="js/mc.js"></script>

  <script src="js/jquery.js"></script>
  <script src="js/jquery.mobile-1.4.5.min.js"></script>
</head>

<body ng-app="starter">
  <div id="myModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
      <span class="close">&times;</span>
      <div class="modal-text">
        <p class="text-content"></p>
      </div>
      <div class="modal-buttons">
        <label for="termo">
          <input id="termo-aceite" type="checkbox" onclick="aceiteTermo()" />
          Concordo e aceito com os termos da política de privacidade.
        </label>
        <div>
          <button type="button" class="btn-declinar" onclick="validar('N_APP')">Declinar</button>
          <button type="button" class="btn-aceitar" onclick="validar('S_APP')" disabled>Aceitar</button>
        </div>
      </div>
    </div>

  </div>

  <script type="text/javascript">
    window.onerror = function (message, url, lineNumber) {
      navigator.notification.alert(
        `Error: ${message} in ${url} at line ${lineNumber}`,  // message
        function () {
          return;
        },         // callback
        'Falha',            // title
        'OK'                  // buttonName
      );
    }

    var login = getquerystring("login");
    var senha = getquerystring("senha");

    var modal = document.getElementById("myModal");

    var span = document.getElementsByClassName("close")[0];

    var termo_aceite = document.getElementById("termo-aceite");
    var btn_aceitar = document.querySelector('.btn-aceitar');

    span.onclick = function () {
      window.location.href = "login.htm";
    }

    function aceiteTermo() {
      if (termo_aceite.checked) {
        btn_aceitar.removeAttribute('disabled');
      } else {
        btn_aceitar.setAttribute('disabled', 'disabled');
      }
    }

    var num_empree;
    var logou;
    var jsontext;

    document.addEventListener("deviceready", onDeviceReady, false);

    function onDeviceReady() {
      if (navigator.connection.type == 0 || navigator.connection.type == 'none') {
        alert('Sem conexão com internet. Favor se conectar.');
        window.location.assign("ini.htm");
      }
      else {
        iniciar();
      }
    }

    /////////////////////////////
    function iniciar() {
      window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      window.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction;
      window.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;

      if (!window.indexedDB) {
        alert("Seu navegador não suporta uma versão estável do IndexedDB. Alguns recursos não estarão disponíveis.");
      }

      var conteudo_termo = document.querySelector('.text-content');

      var xhr = new XMLHttpRequest();
      xhr.open("GET", "https://www.sigmacivil.com.br/politica_e_termos.htm?t=" + Math.random(), true);
      xhr.addEventListener("loadend", function (evt) {
        var resposta_total = this.responseText;

        var response = resposta_total.replace(/table/g, 'div');
        var data = response.replace(/img/g, 'div');

        conteudo_termo.innerHTML = data;

        var ajax = new XMLHttpRequest();
        ajax.open("GET", "https://www.sigmacivil.com.br/app_sc/consult_emp.asp?l=" + login + "&s=" + senha + "&versao=2.2&t=" + Math.random(), true);
        ajax.addEventListener("loadend", function (evt) {
          var resposta_total = this.responseText;
          jsontext = resposta_total.split("*")

          var getLogin = JSON.parse(jsontext[0]);

          logou = getLogin.logou;
          qual_id_cliente = getLogin.id_cliente;
          num_empree = getLogin.id_empree;
          nome_empree = getLogin.nome_empree;
          q_e_construtora = getLogin.e_construtora;
          data_implantacao_sc = getLogin.data_implantacao_sc;
          status_sync = getLogin.status_sync;

          if (logou == "S") {
            modal.style.display = "flex";
          } else {  //nao logou
            navigator.notification.alert(
              'Login ou senha incorretos!',
              function () {
                window.location.assign("login.htm");
              },
              'Alerta',
              'OK'
            );
          }
        });

        ajax.send();
      });

      xhr.send();
    }

    function criarRemoverDadosTabela() {
      var getEmpree = jsontext[1];
      var objEmpree = JSON.parse(getEmpree);

      var db;
      var request = window.indexedDB.open("db_sigmacivil", "1");

      request.onerror = function (event) {
        alert("Erro ao criar o banco (cod 01)");
      };

      var clientes = [
        {
          id_cliente: qual_id_cliente,
          e_construtora: q_e_construtora,
          text1: login,
          text2: senha
        }
      ];

      var emprees = [
        {
          id_empree: num_empree,
          nome_empree: nome_empree,
          status_sync: status_sync,
          data_implantacao_sc: data_implantacao_sc
        },
      ];

      var configs = [
        {
          id_config: qual_id_cliente,
          editar_fotos: false,
          upload_automatico: true,
          tutorial: false,
          notificacao: true,
        }
      ];

      localStorage.setItem('sl2', 'selected');
      localStorage.setItem('sl3', 'selected');

      var manuts = [];

      for (i = 0; i < objEmpree.dados_empreendimento.length; i++) {
        manuts.push(objEmpree.dados_empreendimento[i]);
      }

      request.onsuccess = function (event) {
        db = request.result;

        executarRemoverAdicionarDados(db, clientes, emprees, manuts, configs);

        db.onerror = function (event) {
          alert("Database error: " + event.target.error);
        }
      };

      var num = 0;

      function executarRemoverAdicionarDados(db, clientes, emprees, manuts, configs) {
        var tx = db.transaction(['mtab_cliente'], 'readwrite');
        var store = tx.objectStore('mtab_cliente');

        var objectStoreRequest = store.clear();
        objectStoreRequest.onsuccess = function (event) {
          num += 1;
        }

        clientes.map(function (cliente) {
          store.add(cliente);
        });

        tx.oncomplete = function () {
          removerAdicionarDadosEmpree(db, emprees, manuts, configs);
        }

        tx.onerror = function (event) {
          alert('error storing note ' + event.target.error);
        }
      }

      function removerAdicionarDadosEmpree(db, emprees, manuts, configs) {
        var tx = db.transaction(['mtab_empree'], 'readwrite');
        var store = tx.objectStore('mtab_empree');

        var objectStoreRequest = store.clear();
        objectStoreRequest.onsuccess = function (event) {
          num += 1;
        }

        emprees.map(function (empree) {
          store.add(empree);
        });

        tx.oncomplete = function () {
          removerAdicionarDadosManuts(db, manuts, configs);
        }

        tx.onerror = function (event) {
          alert('error storing empree note ' + event.target.error);
        }
      }

      function removerAdicionarDadosManuts(db, manuts, configs) {
        var tx = db.transaction(['mtab_prog_manut'], 'readwrite');
        var store = tx.objectStore('mtab_prog_manut');

        var objectStoreRequest = store.clear();
        objectStoreRequest.onsuccess = function (event) {
          num += 1;
        }

        manuts.map(function (manut) {
          store.add(manut);
        });

        tx.oncomplete = function () {
          removerAdicionarDadosConfigs(db, configs);
          console.log(num);
        }

        tx.onerror = function (event) {
          alert('error storing manut note ' + event.target.error);
        }
      }

      function removerAdicionarDadosConfigs(db, configs) {
        var tx = db.transaction(['mtab_config'], 'readwrite');
        var store = tx.objectStore('mtab_config');

        var objectStoreRequest = store.clear();
        objectStoreRequest.onsuccess = function (event) {
          num += 1;
        }

        configs.map(function (config) {
          store.add(config);
        });

        tx.oncomplete = function () {
          removerDadosProgManutEvento(db);
          console.log(num);
        }

        tx.onerror = function (event) {
          alert('error storing manut note ' + event.target.error);
        }
      }

      function removerDadosProgManutEvento(db) {
        var tx = db.transaction(['mtab_prog_manut_evento'], 'readwrite');
        var store = tx.objectStore('mtab_prog_manut_evento');

        var objectStoreRequest = store.clear();
        objectStoreRequest.onsuccess = function (event) {
          removerDadosMtabCheckpoint(db);
        }
      }

      function removerDadosMtabCheckpoint(db) {
        var tx = db.transaction(['mtab_checkpoint'], 'readwrite');
        var store = tx.objectStore('mtab_checkpoint');

        var objectStoreRequest = store.clear();
        objectStoreRequest.onsuccess = function (event) {
          go_to();
        }
      }

      ///////////////  FIM tabela programa_manutenção //////////////	  
    }

    function validar(sta) {
      if (sta == 'N_APP') {
        navigator.notification.confirm(
          'Tem certeza que você deseja não aceitar as condições? Isso vai impedir que você utilize o SigmaCivil!',
          function (buttonIndex) {
            if (buttonIndex === 1) {
              return;
            }

            var xhr2 = new XMLHttpRequest();
            xhr2.open("GET", "https://www.sigmacivil.com.br/app_sc/marcar_aceite_termos.asp?l=" + login + "&s=" + senha + "&sta=" + sta, true);
            xhr2.addEventListener("loadend", function (evt) {
              var resposta_total = this.responseText;

              if (resposta_total == 'OK') {
                window.location.href = "login.htm";
              }
            });

            xhr2.send();
          },
          'Atenção!',
          ['Cancelar', 'OK']
        );
      } else if (sta == 'S_APP') {
        var xhr2 = new XMLHttpRequest();
        xhr2.open("GET", "https://www.sigmacivil.com.br/app_sc/marcar_aceite_termos.asp?l=" + login + "&s=" + senha + "&sta=" + sta, true);
        xhr2.addEventListener("loadend", function (evt) {
          var resposta_total = this.responseText;

          if (resposta_total == 'OK') {
            criarRemoverDadosTabela();
          }
        });

        xhr2.send();
      }
    }

    function tem_conexao() {

      if (navigator.connection.type == 0 || navigator.connection.type == 'none') {
        // alert('Sem conexão com internet. Favor se conectar.');
        return false;
      }
      else {
        return true;
      }

    }

    function go_to() {
      if (tem_conexao()) {
        window.location.assign("empree_online.htm?e=" + num_empree + "&l=" + login + "&s=" + senha)
      } else {
        window.location.assign("empree.htm?e=" + num_empree + "&l=" + login + "&s=" + senha);
      }
    }

  </script>
</body>

</html>