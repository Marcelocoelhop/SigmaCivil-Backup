<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width">
    <title></title>

    <!-- <link rel="manifest" href="manifest.json"> -->

    <!-- un-comment this code to enable service worker
    <script>
      if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('service-worker.js')
          .then(() => console.log('service worker installed'))
          .catch(err => console.log('Error', err));
      }
    </script>-->

    <!-- <link href="lib/ionic/css/ionic.css" rel="stylesheet">
    <link href="css/style.css" rel="stylesheet"> -->
    <link rel="stylesheet" href="css/jquery.mobile-1.0.1.min.css" />

    <!-- IF using Sass (run gulp sass first), then uncomment below and remove the CSS includes above
    <link href="css/ionic.app.css" rel="stylesheet">
    -->

    <!-- ionic/angularjs js -->
    <!-- <script src="lib/ionic/js/ionic.bundle.js"></script> -->

    <!-- cordova script (this will be a 404 during development) -->
    <script src="cordova.js"></script>

    <!-- your app's js -->
    <script src="js/app.js"></script>
    <script type="text/javascript" src="js/mc.js"></script>
  </head>
  <body ng-app="starter">
    <script type="text/javascript">

      document.addEventListener("deviceready", onDeviceReady, false);
  
      function onDeviceReady() {
        iniciar();
      }
  
      /////////////////////////////
      function iniciar() {
        window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        window.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction;
        window.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;
  
        if (!window.indexedDB) {
          alert("Seu navegador não suporta uma versão estável do IndexedDB. Alguns recursos não estarão disponíveis.");
        }
  
        var db;
        var request = window.indexedDB.open("db_sigmacivil", "1");
  
        request.onerror = function (event) {
          alert("Erro ao criar o banco (cod 01)");
        };
  
        request.onsuccess = function (event) {
          db = request.result;
  
          executarRemoverDados(db);
  
          db.onerror = function (event) {
            alert("Database error: " + event.target.error);
          }
        };
  
        function executarRemoverDados(db) {
          var tx = db.transaction(['mtab_cliente'], 'readwrite');
          var store = tx.objectStore('mtab_cliente');
  
          var objectStoreRequest = store.clear();
          objectStoreRequest.onsuccess = function (event) {
            removerDadosEmpree(db);
          }
        }
  
        function removerDadosEmpree(db) {
          var tx = db.transaction(['mtab_empree'], 'readwrite');
          var store = tx.objectStore('mtab_empree');
  
          var objectStoreRequest = store.clear();
          objectStoreRequest.onsuccess = function (event) {
            removerDadosMtabProgManutEvento(db)
          }
        }
  
        function removerDadosMtabProgManutEvento(db) {
          var tx = db.transaction(['mtab_prog_manut_evento'], 'readwrite');
          var store = tx.objectStore('mtab_prog_manut_evento');
  
          var objectStoreRequest = store.clear();
          objectStoreRequest.onsuccess = function (event) {
            removerDadosMtabProgManut(db);
          }
        }
  
        function removerDadosMtabProgManut(db) {
          var tx = db.transaction(['mtab_prog_manut'], 'readwrite');
          var store = tx.objectStore('mtab_prog_manut');
  
          var objectStoreRequest = store.clear();
          objectStoreRequest.onsuccess = function (event) {
            removerDadosMtabCheckpoint(db);
          }
        }
  
        function removerDadosMtabCheckpoint(db) {
          var tx = db.transaction(['mtab_checkpoint'], 'readwrite');
          var store = tx.objectStore('mtab_checkpoint');
  
          var objectStoreRequest = store.clear();
          objectStoreRequest.onsuccess = function (event) {
            removerDadosMtabConfig(db);
          }
        }
  
        function removerDadosMtabConfig(db) {
          var tx = db.transaction(['mtab_config'], 'readwrite');
          var store = tx.objectStore('mtab_config');
  
          localStorage.removeItem('sl1');
          localStorage.removeItem('sl2');
          localStorage.removeItem('sl3');
  
          var objectStoreRequest = store.clear();
          objectStoreRequest.onsuccess = function (event) {
            alert("Os dados do atual empreendimento já foram apagados. Você já pode importar um novo empreendimento!")
            goto();
          }
        }
  
      }
  
      function goto() {
        document.form1.action = "index.html";
        document.form1.submit();
      }
  
    </script>
  
    <form name="form1" action="" method="get">
    </form>
  </body>
</html>
